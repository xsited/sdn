'Download plantuml from http://plantuml.sourceforge.net/ 
'Generate png with java -jar plantuml.jar <file> 
'Output in img/<module>.png 
'If Java spits out memory error increase heap size with java -Xmx1024m  -jar plantuml.jar <file> 
@startuml img/orchestration.png 
hide empty fields 
hide empty methods 
hide <<case>> circle
hide <<augment>> circle
hide <<choice>> circle
hide <<leafref>> stereotype
hide <<leafref>> circle
page 1x1 
Title orchestration 
package "yang:ietf-yang-types" as yang_ietf_yang_types 
end package 
package "inet:ietf-inet-types" as inet_ietf_inet_types 
end package 
note top of cablelabs_orchestration : <b>Namespace: </b> http://cablelabs.com/yang/nfv/orchestration \n<b>Prefix: </b> cablelabs \n<b>Organization : </b>\nCableLabs \n
package "cablelabs:orchestration" as cablelabs_orchestration 
yang_ietf_yang_types +-- cablelabs_orchestration
inet_ietf_inet_types +-- cablelabs_orchestration
class "orchestration" as orchestration << (M, #33CCFF) module>> 
enum "epl-service-type" as orchestration_I_epl_service_type
orchestration_I_epl_service_type : epl 
orchestration_I_epl_service_type : ep-tree 
orchestration_I_epl_service_type : ep-lan 
orchestration_I_epl_service_type : ... 
enum "up-down-state-type" as orchestration_I_up_down_state_type
orchestration_I_up_down_state_type : up 
orchestration_I_up_down_state_type : down 
class "float" as float << (T, YellowGreen) typedef>>
float : binary {length = 0..4}
enum "interface-speed-type" as orchestration_I_interface_speed_type
orchestration_I_interface_speed_type : ten 
orchestration_I_interface_speed_type : hundred 
orchestration_I_interface_speed_type : thousand 
enum "interfaced-duplex-type" as orchestration_I_interfaced_duplex_type
orchestration_I_interfaced_duplex_type : half 
orchestration_I_interfaced_duplex_type : full 
class "common-packets-counters-type" as orchestration_I_common_packets_counters_type_grouping <<(G,Lime) grouping>> 
orchestration_I_common_packets_counters_type_grouping : bytes : yang:counter64  
orchestration_I_common_packets_counters_type_grouping : packets : yang:counter64  
orchestration_I_common_packets_counters_type_grouping : errors : yang:counter32  
orchestration_I_common_packets_counters_type_grouping : dropped : yang:counter32  
class "mep-id-type" as mep_id_type << (T, YellowGreen) typedef>>
mep_id_type : uint16 [1..8191]
class "tenant-reference" as tenant_reference << (T, YellowGreen) typedef>>
tenant_reference : string
class "circuit-reference" as circuit_reference << (T, YellowGreen) typedef>>
circuit_reference : string
class "nid-id" as nid_id << (T, YellowGreen) typedef>>
nid_id : inet:ip-address
class "circuit-metrics-grouping" as orchestration_I_circuit_metrics_grouping_grouping <<(G,Lime) grouping>> 
orchestration_I_circuit_metrics_grouping_grouping : latency : uint32 [0..65535]  
class "throughput" as  orchestration_I_circuit_metrics_grouping_I_throughput <<container>> 
orchestration_I_circuit_metrics_grouping_grouping *-- "1" orchestration_I_circuit_metrics_grouping_I_throughput 
orchestration_I_circuit_metrics_grouping_I_throughput : bps : yang:counter64  
orchestration_I_circuit_metrics_grouping_I_throughput : pps : yang:counter64  
class "circuit-attributes-grouping" as orchestration_I_circuit_attributes_grouping_grouping <<(G,Lime) grouping>> 
orchestration_I_circuit_attributes_grouping_grouping : circuit-id : circuit-reference  
orchestration_I_circuit_attributes_grouping_grouping : name : string {length = 0..64}  
class "performance-sla" as  orchestration_I_circuit_attributes_grouping_I_performance_sla <<container>> 
orchestration_I_circuit_attributes_grouping_grouping *-- "1" orchestration_I_circuit_attributes_grouping_I_performance_sla 
orchestration_I_circuit_attributes_grouping_I_performance_sla : circuit-metrics-grouping {uses} 
orchestration_I_circuit_attributes_grouping_grouping : service-type : epl-service-type   = epl 
orchestration_I_circuit_attributes_grouping_grouping : service-label : string {length = 0..32}  
class "nid-grouping" as orchestration_I_nid_grouping_grouping <<(G,Lime) grouping>> 
orchestration_I_nid_grouping_grouping : enabled : boolean   = false 
orchestration_I_nid_grouping_grouping : nid-id : nid-id   {mandatory}
orchestration_I_nid_grouping_grouping : mac-address : yang:mac-address  
orchestration_I_nid_grouping_grouping : nid-state : up-down-state-type   = down 
class "circuits-managed" as  orchestration_I_nid_grouping_I_circuits_managed <<container>> 
orchestration_I_nid_grouping_grouping *-- "1" orchestration_I_nid_grouping_I_circuits_managed 
class "circuits-managed" as orchestration_I_nid_grouping_I_circuits_managed_I_circuits_managed << (L, #FF7700) list>> 
orchestration_I_nid_grouping_I_circuits_managed *-- "0..N" orchestration_I_nid_grouping_I_circuits_managed_I_circuits_managed 
orchestration_I_nid_grouping_I_circuits_managed_I_circuits_managed : circuit-attributes-grouping {uses} 
class "circuit-grouping" as orchestration_I_circuit_grouping_grouping <<(G,Lime) grouping>> 
class "circuit-attributes" as  orchestration_I_circuit_grouping_I_circuit_attributes <<container>> 
orchestration_I_circuit_grouping_grouping *-- "1" orchestration_I_circuit_grouping_I_circuit_attributes 
orchestration_I_circuit_grouping_I_circuit_attributes : circuit-attributes-grouping {uses} 
class "nids-managed" as  orchestration_I_circuit_grouping_I_nids_managed <<container>> 
orchestration_I_circuit_grouping_grouping *-- "1" orchestration_I_circuit_grouping_I_nids_managed 
class "nids-managed" as orchestration_I_circuit_grouping_I_nids_managed_I_nids_managed << (L, #FF7700) list>> 
orchestration_I_circuit_grouping_I_nids_managed *-- "0..N" orchestration_I_circuit_grouping_I_nids_managed_I_nids_managed 
orchestration_I_circuit_grouping_I_nids_managed_I_nids_managed : nid-grouping {uses} 
orchestration : orchestration_nfv_create( in: tenant_id in: nid_input out: status out: nid_id)
orchestration : orchestration_nfv_get( in: tenant_id in: nid_id out: status out: nid_output)
orchestration : orchestration_nfv_update( in: tenant_id in: nid_id in: nid_input out: status)
orchestration : orchestration_nfv_delete( in: tenant_id in: nid_id in: nid_input out: status)
orchestration : orchestration_circuit_create( in: tenant_id in: circuit_input out: status out: circuit_id)
orchestration : orchestration_circuit_get( in: circuit_id out: status out: circuit_output)
orchestration : orchestration_circuit_update( in: tenant_id in: circuit_id in: circuit_input out: status)
orchestration : orchestration_circuit_delete( in: tenant_id in: circuit_id out: status)
orchestration : orchestration_circuit_request_authorization( in: tenant_id in: circuit_id in: circuit_input out: status)
orchestration : orchestration_circuit_performance_metrics( in: tenant_id in: circuit_id out: status)
orchestration : orchestration_circuit_fault_report( in: tenant_id in: circuit_id in: link_state out: status)
end package

orchestration_I_circuit_attributes_grouping_I_performance_sla --> orchestration_I_circuit_metrics_grouping_grouping : uses 
orchestration_I_nid_grouping_I_circuits_managed_I_circuits_managed --> orchestration_I_circuit_attributes_grouping_grouping : uses 
orchestration_I_circuit_grouping_I_circuit_attributes --> orchestration_I_circuit_attributes_grouping_grouping : uses 
orchestration_I_circuit_grouping_I_nids_managed_I_nids_managed --> orchestration_I_nid_grouping_grouping : uses 
center footer
 <size:20> UML Generated : 2014-07-03 16:54 </size>
 endfooter 
@enduml 
