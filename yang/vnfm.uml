'Download plantuml from http://plantuml.sourceforge.net/ 
'Generate png with java -jar plantuml.jar <file> 
'Output in img/<module>.png 
'If Java spits out memory error increase heap size with java -Xmx1024m  -jar plantuml.jar <file> 
@startuml img/vnfm.png 
hide empty fields 
hide empty methods 
hide <<case>> circle
hide <<augment>> circle
hide <<choice>> circle
hide <<leafref>> stereotype
hide <<leafref>> circle
page 1x1 
Title vnfm 
package "yang:ietf-yang-types" as yang_ietf_yang_types 
end package 
package "inet:ietf-inet-types" as inet_ietf_inet_types 
end package 
note top of cablelabs_vnfm : <b>Namespace: </b> http://cablelabs.com/yang/nfv/nfvm \n<b>Prefix: </b> cablelabs \n<b>Organization : </b>\nCableLabs, Inc. \n<b>Contact : </b>\nThomas Kee <t.kee@cablelabs.com> \n<b>Revision : </b> 2014-07-04 \n
package "cablelabs:vnfm" as cablelabs_vnfm 
yang_ietf_yang_types +-- cablelabs_vnfm
inet_ietf_inet_types +-- cablelabs_vnfm
class "vnfm" as vnfm << (M, #33CCFF) module>> 
class "float" as float << (T, YellowGreen) typedef>>
float : binary {length = 0..4}
enum "vnf-function-type" as vnfm_I_vnf_function_type
vnfm_I_vnf_function_type : dpi 
vnfm_I_vnf_function_type : firewall 
vnfm_I_vnf_function_type : switch 
vnfm_I_vnf_function_type : ... 
enum "vnf-init-type" as vnfm_I_vnf_init_type
vnfm_I_vnf_init_type : gzip 
vnfm_I_vnf_init_type : mime 
vnfm_I_vnf_init_type : script 
vnfm_I_vnf_init_type : ... 
enum "vnf-state-type" as vnfm_I_vnf_state_type
vnfm_I_vnf_state_type : unpause 
vnfm_I_vnf_state_type : resume 
vnfm_I_vnf_state_type : rescue 
vnfm_I_vnf_state_type : ... 
class "vnf-service-graph-type" as vnf_service_graph_type << (T, YellowGreen) typedef>>
vnf_service_graph_type : uint16 [1..8191]
class "vnf-attributes-grouping" as vnfm_I_vnf_attributes_grouping_grouping <<(G,Lime) grouping>> 
vnfm_I_vnf_attributes_grouping_grouping : vnf-id : vnf-reference  
vnfm_I_vnf_attributes_grouping_grouping : vnf-personality : vnf-function-type  
vnfm_I_vnf_attributes_grouping_grouping : vnf-init : vnf-init-type  
vnfm_I_vnf_attributes_grouping_grouping : vnf-state : vnf-state-type  
vnfm_I_vnf_attributes_grouping_grouping : vnf-service-graph : vnf-service-graph-type  
class "vnf-reference" as vnf_reference << (T, YellowGreen) typedef>>
vnf_reference : string
class "tenant-reference" as tenant_reference << (T, YellowGreen) typedef>>
tenant_reference : string
class "vnf-list-grouping" as vnfm_I_vnf_list_grouping_grouping <<(G,Lime) grouping>> 
class "vnf-managed" as  vnfm_I_vnf_list_grouping_I_vnf_managed <<container>> 
vnfm_I_vnf_list_grouping_grouping *-- "1" vnfm_I_vnf_list_grouping_I_vnf_managed 
class "vnf-managed" as vnfm_I_vnf_list_grouping_I_vnf_managed_I_vnf_managed << (L, #FF7700) list>> 
vnfm_I_vnf_list_grouping_I_vnf_managed *-- "0..N" vnfm_I_vnf_list_grouping_I_vnf_managed_I_vnf_managed 
vnfm_I_vnf_list_grouping_I_vnf_managed_I_vnf_managed : vnf-attributes-grouping {uses} 
vnfm : vnfm_vnf_create( in: tenant_id in: vnf_input out: status out: vnf_id)
vnfm : vnfm_vnf_get( in: tenant_id in: vnf_id out: status out: vnf_state out: vnf_output)
vnfm : vnfm_vnf_update( in: tenant_id in: vnf_id in: vnf_output out: status)
vnfm : vnfm_vnf_delete( in: tenant_id in: vnf_id out: status)
vnfm : vnfm_vnf_list( in: tenant_id out: status out: vnf_list)
end package

vnfm_I_vnf_list_grouping_I_vnf_managed_I_vnf_managed --> vnfm_I_vnf_attributes_grouping_grouping : uses 
center footer
 <size:20> UML Generated : 2014-07-09 07:40 </size>
 endfooter 
@enduml 
